/* Switch Component */
.switch {
  --switch-width: 44px;
  --switch-height: 24px;
  --slider-size: calc(var(--switch-height) - 4px);
  --slider-offset: 2px;
  
  position: relative;
  display: inline-grid;
  place-items: center;
  width: var(--switch-width);
  height: var(--switch-height);
  flex-shrink: 0;
  cursor: pointer;
  transition: var(--transition);
}

/* Input element containment */
.switch input {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  cursor: inherit;
}

/* Slider track */
.slider {
  position: absolute;
  inset: 0;
  background-color: var(--border);
  transition: var(--transition);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm) inset;
}

/* Slider thumb */
.slider:before {
  content: "";
  position: absolute;
  height: var(--slider-size);
  width: var(--slider-size);
  left: var(--slider-offset);
  bottom: var(--slider-offset);
  background-color: var(--background);
  border-radius: inherit;
  transition: var(--transition);
  will-change: transform;
  box-shadow: var(--shadow-md);
}

/* Checked states */
input:checked + .slider {
  background-color: var(--primary);
  box-shadow: none;
}

input:checked + .slider:before {
  transform: translateX(calc(var(--switch-width) - var(--slider-size) - (2 * var(--slider-offset))));
}

/* Focus states */
input:focus-visible + .slider {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Disabled states */
input:disabled + .slider {
  opacity: 0.6;
  filter: grayscale(0.4);
  cursor: not-allowed;
}

/* Rounded variant */
.slider.round {
  --radius: calc(var(--switch-height) / 2);
}

/* Motion reduction */
@media (prefers-reduced-motion: reduce) {
  .slider,
  .slider:before {
      transition-duration: 1ms;
  }
}

/* High contrast mode */
@media (forced-colors: active) {
  .slider {
      forced-color-adjust: none;
      background-color: ButtonBorder;
  }
  
  input:checked + .slider {
      background-color: Highlight;
  }
  
  .slider:before {
      background-color: ButtonFace;
  }
}
